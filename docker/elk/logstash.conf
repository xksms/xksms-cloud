input {
  beats {
    port => 5044                       # Filebeat、Spring Boot 发送的端口
  }

  # 可选：允许从 TCP 接收 JSON（如 logback SocketAppender）
  # tcp {
  #   port => 5000
  #   codec => json_lines
  # }
}

filter {
  # 尝试将 message 字段解析为 JSON（Spring Boot 日志用 logstash-logback-encoder 输出时适用）
  json {
    source => "message"
    target => "ecs_parsed"            # 解析结果放入 ecs_parsed 中，防止字段冲突
    skip_on_invalid_json => true
  }

  # 如果包含异常栈信息
  if [ecs_parsed][stack_trace] {
    mutate {
      rename => { "[ecs_parsed][stack_trace]" => "error.stack_trace" }
    }
  }

  # 将 ecs_parsed 下的字段提取到顶层（可选）
  if [ecs_parsed] {
    mutate {
      add_field => {
        "log.level" => "%{[ecs_parsed][log][level]}"
        "log.logger" => "%{[ecs_parsed][log][logger]}"
        "log.message" => "%{[ecs_parsed][message]}"
        "trace.id" => "%{[ecs_parsed][trace][id]}"
        "span.id"  => "%{[ecs_parsed][span][id]}"
        "service.name" => "%{[ecs_parsed][service][name]}"
      }
      remove_field => ["ecs_parsed"]
    }
  }
}

output {
  elasticsearch {
    hosts => ["http://elasticsearch:9200"]
    user => "${ELASTIC_USER}"             # 使用环境变量（已在 docker-compose.yml 设置）
    password => "${ELASTIC_PASSWORD}"
    index => "springboot-log-%{+YYYY.MM.dd}"
  }

  # 可选：输出到控制台（开发调试用）
  stdout {
    codec => rubydebug
  }
}
