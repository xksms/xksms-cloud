input {
  # 接收来自 TCP 的 JSON 格式日志
  tcp {

    port => 5044
     # 解析 JSON 格式的日志
    codec => json_lines
  }

  # 读取文件日志并通过 Filebeat 或其他方式挂载的日志文件
  file {
   # 日志文件路径
    path => "/usr/share/logstash/logs/*.log"
     # 从文件的开头开始读取
    start_position => "beginning"
    # 每次从头读取日志（用于调试）
    sincedb_path => "/dev/null"
  }

  # 处理特定目录下的日志，例如 xksms-user 模块的日志
  file {
    path => "/usr/share/logstash/logs/xksms-user/*.log"  # xksms-user 模块日志路径
    tags => ["xksms-user"]  # 为该日志流添加 tags 标签
    start_position => "beginning"
    sincedb_path => "/dev/null"  # 每次从头读取
  }
}

filter {
  # 解析 JSON 格式的日志
  json {
  # 解析的源字段
    source => "message"
    # 解析结果存储的目标字段
    target => "ecs_parsed"
    # 如果日志格式无效，则跳过
    skip_on_invalid_json => true
  }

  # 如果日志中包含 stack_trace 字段（异常信息），将其重命名为 error.stack_trace
  if [ecs_parsed][stack_trace] {
    mutate {
      rename => { "[ecs_parsed][stack_trace]" => "error.stack_trace" }
    }
  }

  # 提取 ecs_parsed 下的字段到顶层并删除 ecs_parsed 字段
  if [ecs_parsed] {
    mutate {
    # 提取日志级别 提取日志记录器  提取日志消息 提取 trace ID 提取 span ID 提取服务名
      add_field => {
        "log.level" => "%{[ecs_parsed][log][level]}"
        "log.logger" => "%{[ecs_parsed][log][logger]}"
        "log.message" => "%{[ecs_parsed][message]}"
        "trace.id" => "%{[ecs_parsed][trace][id]}"
        "span.id"  => "%{[ecs_parsed][span][id]}"
        "service.name" => "%{[ecs_parsed][service][name]}"
      }
        # 删除嵌套字段
      remove_field => ["ecs_parsed"]
    }
  }

  # 解析日志时间戳
  date {
    match => ["timestamp", "ISO8601"]
  }
}

output {
  # 根据 tags 区分不同的日志流，决定将日志发送到哪个 Elasticsearch 索引
  if "xksms-user" in [tags] {
    # 针对 xksms-user 模块的日志，将其输出到 xksms-user-* 索引
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      # 使用日期动态创建索引
      index => "xksms-user-%{+YYYY.MM.dd}"
    }
  } else {
    # 其他日志输出到 app-logs-* 索引
    elasticsearch {
      hosts => ["http://elasticsearch:9200"]
      index => "app-logs-%{+YYYY.MM.dd}"
    }
  }

  # 输出到控制台（仅用于开发调试，正式环境中可以删除）
  stdout {
   # 输出详细的日志信息用于调试
    codec => rubydebug
  }
}
